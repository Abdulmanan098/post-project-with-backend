<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Profile - <%= user.name %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      color: #333;
    }
    
    .main-container {
      display: flex;
      min-height: 100vh;
    }
    
    .content-section {
      flex: 1;
      background: white;
      padding: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
    
    .background-section {
      flex: 1;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      position: relative;
      overflow: hidden;
    }
    
    .background-section::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><defs><radialGradient id="a" cx="50%" cy="50%"><stop offset="0%" stop-color="%23ffffff" stop-opacity="0.1"/><stop offset="100%" stop-color="%23ffffff" stop-opacity="0"/></radialGradient></defs><circle cx="200" cy="200" r="100" fill="url(%23a)"/><circle cx="800" cy="300" r="150" fill="url(%23a)"/><circle cx="400" cy="700" r="120" fill="url(%23a)"/></svg>');
      opacity: 0.3;
    }
    
    .glass-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-radius: 20px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .gradient-text {
      background: linear-gradient(135deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .btn-primary {
      background: linear-gradient(135deg, #667eea, #764ba2);
      color: white;
      font-weight: 600;
      padding: 12px 24px;
      border-radius: 12px;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }
    
    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }
    
    .btn-secondary {
      background: rgba(255, 255, 255, 0.9);
      color: #667eea;
      font-weight: 600;
      padding: 12px 24px;
      border-radius: 12px;
      border: 2px solid #667eea;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .btn-secondary:hover {
      background: #667eea;
      color: white;
      transform: translateY(-2px);
    }
    
    .input-field {
      background: rgba(255, 255, 255, 0.9);
      border: 2px solid #e1e5e9;
      border-radius: 12px;
      padding: 12px 16px;
      transition: all 0.3s ease;
      color: #333;
      width: 100%;
      font-size: 16px;
    }
    
    .input-field:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    .avatar {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background: linear-gradient(135deg, #667eea, #764ba2);
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: bold;
      font-size: 20px;
    }
    
    .stats-card {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 15px;
      padding: 20px;
      text-align: center;
      transition: all 0.3s ease;
      border: 1px solid rgba(102, 126, 234, 0.1);
    }
    
    .stats-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(102, 126, 234, 0.2);
    }
    
    .post-card {
      background: rgba(255, 255, 255, 0.9);
      border-radius: 16px;
      padding: 24px;
      margin: 16px 0;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      transition: all 0.3s ease;
      border: 1px solid rgba(102, 126, 234, 0.1);
    }
    
    .post-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 12px 40px rgba(102, 126, 234, 0.15);
    }
    
    .wavy-divider {
      position: absolute;
      left: -50px;
      top: 0;
      bottom: 0;
      width: 100px;
      background: white;
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
    
    .edit-form {
      display: none;
    }
    
    .edit-form.active {
      display: block;
    }
    
    .post-content {
      display: block;
    }
    
    .post-content.hidden {
      display: none;
    }
    
    .action-btn {
      padding: 8px 16px;
      border-radius: 8px;
      font-weight: 600;
      font-size: 14px;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .action-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    .notification {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 16px 24px;
      border-radius: 12px;
      color: white;
      font-weight: 600;
      z-index: 1000;
      transform: translateX(400px);
      transition: all 0.3s ease;
      max-width: 300px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    }
    
    .notification.show {
      transform: translateX(0);
    }
    
    .notification.success {
      background: linear-gradient(135deg, #10b981, #059669);
    }
    
    .notification.error {
      background: linear-gradient(135deg, #ef4444, #dc2626);
    }
    
    .notification.warning {
      background: linear-gradient(135deg, #f59e0b, #d97706);
    }
    
    .notification.info {
      background: linear-gradient(135deg, #3b82f6, #2563eb);
    }
    
    @media (max-width: 768px) {
      .main-container {
        flex-direction: column;
      }
      
      .background-section {
        display: none;
      }
      
      .content-section {
        padding: 20px;
      }
    }
  </style>
</head>
<body>
  <div class="main-container">
    <!-- Content Section -->
    <div class="content-section">
      <!-- Notification Container -->
      <div id="notification-container"></div>
      
      <div class="max-w-4xl mx-auto w-full">
        
        <!-- Header -->
        <div class="text-center mb-8">
          <div class="avatar mx-auto mb-6">
            <i class="fas fa-user"></i>
          </div>
          <h1 class="text-4xl font-bold text-gray-800 mb-2">Welcome back, <%= user.name %>! ðŸ‘‹</h1>
          <p class="text-gray-600 text-lg">Ready to share your thoughts with the community?</p>
        </div>
        
        <!-- Navigation -->
        <div class="flex justify-between items-center mb-8">
          <div class="flex space-x-4">
            <a href="/posts" class="btn-primary">
              <i class="fas fa-comments mr-2"></i>View Posts
            </a>
            <a href="/logout" class="btn-secondary">
              <i class="fas fa-sign-out-alt mr-2"></i>Logout
            </a>
          </div>
          <div class="text-right">
            <div class="text-sm text-gray-500">Account Status</div>
            <div class="flex items-center space-x-2">
              <div class="w-3 h-3 bg-green-500 rounded-full"></div>
              <span class="text-green-600 font-semibold">Active</span>
            </div>
          </div>
        </div>
        
        <!-- Stats Section -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div class="stats-card">
            <div class="text-3xl font-bold gradient-text mb-2">0</div>
            <div class="text-gray-600">Posts Created</div>
          </div>
          <div class="stats-card">
            <div class="text-3xl font-bold gradient-text mb-2">0</div>
            <div class="text-gray-600">Likes Received</div>
          </div>
          <div class="stats-card">
            <div class="text-3xl font-bold gradient-text mb-2">0</div>
            <div class="text-gray-600">Comments Made</div>
          </div>
          <div class="stats-card">
            <div class="text-3xl font-bold gradient-text mb-2"><%= user.age %></div>
            <div class="text-gray-600">Years Old</div>
          </div>
        </div>
        
        <!-- User Info Section -->
        <div class="glass-card p-8 mb-8">
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-6">
              <div class="avatar">
                <i class="fas fa-user"></i>
              </div>
              <div>
                <h3 class="text-2xl font-bold gradient-text mb-2">
                  <%= user.name %>
                </h3>
                <p class="text-gray-600 text-lg mb-1">
                  <i class="fas fa-envelope mr-3 text-purple-500"></i><%= user.email %>
                </p>
                <p class="text-gray-500">
                  <i class="fas fa-at mr-3 text-purple-500"></i>@<%= user.username %> â€¢ Age: <%= user.age %>
                </p>
              </div>
            </div>
            <div class="text-right">
              <div class="text-sm text-gray-500 mb-2">Account Status</div>
              <div class="flex items-center space-x-2">
                <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                <span class="text-green-600 font-semibold">Active</span>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Create Post Section -->
        <div class="glass-card p-8 mb-8">
          <div class="flex items-center mb-6">
            <div class="avatar mr-4">
              <i class="fas fa-edit"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold gradient-text">Create a Post</h2>
              <p class="text-gray-600">Share your thoughts with the community</p>
            </div>
          </div>
          
          <form method="POST" action="/posts" class="space-y-6">
            <div>
              <textarea 
                name="content" 
                placeholder="What's on your mind, <%= user.name %>?"
                required
                class="input-field h-32 resize-none"
              ></textarea>
            </div>
            
            <div class="flex justify-end">
              <button 
                type="submit" 
                class="btn-primary text-lg">
                <i class="fas fa-paper-plane mr-2"></i>Post
              </button>
            </div>
          </form>
        </div>
        
        <!-- Posts Section -->
        <div class="glass-card p-8">
          <div class="flex items-center mb-6">
            <div class="avatar mr-4">
              <i class="fas fa-stream"></i>
            </div>
            <div>
              <h2 class="text-2xl font-bold gradient-text">Recent Posts</h2>
              <p class="text-gray-600">Latest updates from the community</p>
            </div>
          </div>
          
          <div class="space-y-6">
            <% if (posts && posts.length > 0) { %>
              <% posts.forEach(post => { %>
                <div class="post-card" data-post-id="<%= post._id %>">
                  <div class="flex items-start space-x-4">
                    <div class="avatar">
                      <i class="fas fa-user"></i>
                    </div>
                    <div class="flex-1">
                      <div class="flex items-center justify-between mb-3">
                        <div class="flex items-center space-x-3">
                          <span class="font-semibold text-gray-800"><%= post.author || 'Anonymous' %></span>
                          <span class="text-gray-400">â€¢</span>
                          <span class="text-gray-500 text-sm"><%= post.createdAt ? new Date(post.createdAt).toLocaleDateString() : 'Just now' %></span>
                        </div>
                        <div class="flex space-x-3">
                          <button onclick="editPost('<%= post._id %>')" class="action-btn bg-blue-500 hover:bg-blue-600 text-white">
                            <i class="fas fa-edit mr-1"></i>Edit
                          </button>
                          <button onclick="deletePost('<%= post._id %>')" class="action-btn bg-red-500 hover:bg-red-600 text-white">
                            <i class="fas fa-trash mr-1"></i>Delete
                          </button>
                        </div>
                      </div>
                      
                      <!-- Post Content -->
                      <div class="post-content" id="content-<%= post._id %>">
                        <p class="text-gray-700 leading-relaxed"><%= post.content %></p>
                      </div>
                      
                      <!-- Edit Form -->
                      <div class="edit-form" id="edit-<%= post._id %>">
                        <textarea 
                          class="w-full p-3 border-2 border-gray-200 rounded-lg resize-none focus:border-purple-500 focus:outline-none mb-3"
                          id="edit-text-<%= post._id %>"
                        ><%= post.content %></textarea>
                        <div class="flex space-x-2">
                          <button onclick="saveEdit('<%= post._id %>')" class="btn-primary text-sm">
                            <i class="fas fa-save mr-1"></i>Save
                          </button>
                          <button onclick="cancelEdit('<%= post._id %>')" class="btn-secondary text-sm">
                            <i class="fas fa-times mr-1"></i>Cancel
                          </button>
                        </div>
                      </div>
                      
                      <div class="flex items-center space-x-6 mt-4 pt-4 border-t border-gray-200">
                        <button class="flex items-center text-gray-500 hover:text-purple-500 transition-colors">
                          <i class="fas fa-heart mr-2"></i>Like
                        </button>
                        <button class="flex items-center text-gray-500 hover:text-purple-500 transition-colors">
                          <i class="fas fa-comment mr-2"></i>Comment
                        </button>
                        <button class="flex items-center text-gray-500 hover:text-purple-500 transition-colors">
                          <i class="fas fa-share mr-2"></i>Share
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <div class="text-center py-12">
                <div class="avatar mx-auto mb-6">
                  <i class="fas fa-comments"></i>
                </div>
                <h3 class="text-2xl font-bold text-gray-700 mb-3">No posts yet</h3>
                <p class="text-gray-500">Be the first to share something amazing!</p>
              </div>
            <% } %>
          </div>
        </div>
        
      </div>
    </div>
    
    <!-- Background Section -->
    <div class="background-section">
      <div class="wavy-divider"></div>
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="text-center text-white">
          <div class="text-6xl mb-4">ðŸ‘¤</div>
          <h2 class="text-3xl font-bold mb-2">Your Profile</h2>
          <p class="text-xl opacity-90">Manage your account and posts</p>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Show Notification Function
    function showNotification(message, type = 'info') {
      const container = document.getElementById('notification-container');
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.textContent = message;
      
      container.appendChild(notification);
      
      // Show notification
      setTimeout(() => {
        notification.classList.add('show');
      }, 100);
      
      // Hide and remove notification
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          container.removeChild(notification);
        }, 300);
      }, 3000);
    }
    
    // Edit Post Function
    function editPost(postId) {
      const contentDiv = document.getElementById(`content-${postId}`);
      const editDiv = document.getElementById(`edit-${postId}`);
      
      contentDiv.classList.add('hidden');
      editDiv.classList.add('active');
      showNotification('Edit mode activated', 'info');
    }
    
    // Cancel Edit Function
    function cancelEdit(postId) {
      const contentDiv = document.getElementById(`content-${postId}`);
      const editDiv = document.getElementById(`edit-${postId}`);
      
      contentDiv.classList.remove('hidden');
      editDiv.classList.remove('active');
      showNotification('Edit cancelled', 'warning');
    }
    
    // Save Edit Function
    async function saveEdit(postId) {
      const editText = document.getElementById(`edit-text-${postId}`).value;
      
      try {
        const response = await fetch(`/posts/${postId}/edit`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ content: editText })
        });
        
        if (response.ok) {
          showNotification('Post updated successfully!', 'success');
          const contentDiv = document.getElementById(`content-${postId}`);
          const editDiv = document.getElementById(`edit-${postId}`);
          
          contentDiv.querySelector('p').textContent = editText;
          contentDiv.classList.remove('hidden');
          editDiv.classList.remove('active');
        } else {
          showNotification('Failed to update post. Please try again.', 'error');
        }
      } catch (error) {
        console.error('Error editing post:', error);
        showNotification('Error updating post. Please try again.', 'error');
      }
    }
    
    // Delete Post Function
    async function deletePost(postId) {
      const confirmDelete = confirm('Are you sure you want to delete this post? This action cannot be undone.');
      
      if (confirmDelete) {
        try {
          const response = await fetch(`/posts/${postId}/delete`, {
            method: 'DELETE',
          });
          
          if (response.ok) {
            showNotification('Post deleted successfully!', 'success');
            const postCard = document.querySelector(`[data-post-id="${postId}"]`);
            if (postCard) {
              postCard.remove();
            } else {
              location.reload();
            }
          } else {
            showNotification('Failed to delete post. Please try again.', 'error');
          }
        } catch (error) {
          console.error('Error deleting post:', error);
          showNotification('Error deleting post. Please try again.', 'error');
        }
      }
    }
  </script>
</body>
</html>